# SPDX-FileCopyrightText: Copyright (C) 2023 Opal Health Informatics Group at the Research Institute of the McGill University Health Centre <john.kildea@mcgill.ca>
#
# SPDX-License-Identifier: AGPL-3.0-or-later

# dummy stages to follow the template guidelines
stages:
  - build
  - test
  - deploy
  - review
  - dast
  - staging
  - canary
  - production
  - incremental rollout 10%
  - incremental rollout 25%
  - incremental rollout 50%
  - incremental rollout 100%
  - performance
  - cleanup
  - extra


include:
  - project: 'opalmedapps/engineering/ci-templates'
    file: '/templates/InterruptibleMergeRequest-Pipelines.gitlab-ci.yml'
  - project: 'opalmedapps/engineering/ci-templates'
    file: '/templates/Auto-DevOps.gitlab-ci.yml'
  # Add Reuse job: https://reuse.software/
  - project: 'opalmedapps/engineering/ci-templates'
    file: '/templates/jobs/Reuse.gitlab-ci.yml'
  - component: $CI_SERVER_FQDN/opalmedapps/engineering/ci-templates/check-thirdparty-notice@main
    inputs:
      package-file: package.json
      composer-file: composer.json
      additional-dependencies: jQueryUI ui.bootstrap.materialPicker

build:
  before_script:
    # add npmrc file with XLTS.dev registry token
    - '[ -z "$NPMRC_FILE"] && echo "Error: environment variable NPMRC_FILE must be defined for this job" && exit 1'
    - echo "$NPMRC_FILE" > .npmrc

# for some reason, a branch pipeline is added as well
check_thirdparty_notice:
  rules:
    # Add the job to merge request pipelines if there's an open merge request.
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    # Don't add it to a *branch* pipeline if it's already in a merge request pipeline.
    - if: $CI_OPEN_MERGE_REQUESTS
      when: never
    # If there's no open merge request, add it to a *branch* pipeline instead.
    - if: '$CI_COMMIT_TAG || $CI_COMMIT_BRANCH'

phpunit:
  stage: test
  image: php:8.4.2-apache-bookworm
  before_script:
    - apt-get update && apt-get install -y curl unzip libxml2-dev
    # Install SOAP extension
    - docker-php-ext-install soap
    # Install Composer globally
    - curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
    # Install project dependencies (including dev dependencies)
    - composer install
  script:
    - ./vendor/bin/phpunit -c labs/phpunit.xml
