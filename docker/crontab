# Edit this file to introduce tasks to be run by cron.
# 
# Each task to run has to be defined through a single line
# indicating with different fields when the task will be run
# and what command to run for the task
# 
# To define the time you can provide concrete values for
# minute (m), hour (h), day of month (dom), month (mon),
# and day of week (dow) or use '*' in these fields (for 'any').
# 
# Notice that tasks will be started based on the cron's system
# daemon's notion of time and timezones.
# 
# Output of the crontab jobs (including errors) is sent through
# email to the user the crontab file belongs to (unless redirected).
# 
# For example, you can run a backup of all your user accounts
# at 5 a.m every week with:
# 0 5 * * 1 tar -zcf /var/backups/home.tgz /home/
# 
# For more information see the manual pages of crontab(5) and cron(8)
# 
# m h  dom mon dow   command
# Primary cron job
*/2 * * * * /var/www/html/publisher/dataControl.pl > /dev/null 2>> /proc/1/fd/2

# New cron controls
*/1 * * * * /var/www/html/publisher/controls/announcementControl.pl >> /dev/null 2>> /proc/1/fd/2
*/2 * * * * /var/www/html/publisher/controls/educationalMaterialControl.pl > /dev/null 2>> /proc/1/fd/2
*/2 * * * * /var/www/html/publisher/controls/legacyQuestionnaireControl.pl > /dev/null 2>> /proc/1/fd/2
*/2 * * * * /var/www/html/publisher/controls/txTeamMessagesControl.pl > /dev/null 2>> /proc/1/fd/2

# Pending appointments and resources module
# These curls will only be authorized if there is a Cron system user in the OpalDB.OAUser table, see opal-sql-queries.php, SQL_OPAL_SELECT_USER_INFO query
*/1 * * * * curl --silent --show-error http://opaladmin:8080/cron-job/update/resource-pending > /dev/null 2>> /proc/1/fd/2
*/1 * * * * curl --silent --show-error http://opaladmin:8080/cron-job/update/appointment-pending > /dev/null 2>> /proc/1/fd/2

# audit backup cron
30 00 * * * curl --silent --show-error http://opaladmin:8080/php/cron-job/add.audit.system.backup.php > /dev/null 2>> /proc/1/fd/2

# Opal appointment reminder push notification
0 14 * * * php /var/www/html/publisher/php/sendAppointmentReminders.php >> /proc/1/fd/2

# Delayed notifications for lab results. Runs every two hours.
# If the frequency is changed the query in the delayedLabPushNotification.php should be updated as well.
0 */2 * * * php /var/www/html/publisher/php/sendDelayedLabsPushNotifications.php > /dev/null 2>> /proc/1/fd/2
